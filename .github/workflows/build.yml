name: Build
on: [push]

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Environment
        run: |
          export FLASK_APP=app.py
          echo "Setup complete"

  python-format:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
      - name: Install Black
        run: pip install black
      - name: Run Black
        run: black . --line-length 79 --exclude "Blueprint/__init__.py"
      - name: Commit changes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          git diff --quiet && git diff --staged --quiet || (git commit -m "Apply automatic formatting changes" && git push)

#  python-lint:
#    needs: python-format
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v4
#      - name: Setup Python
#        uses: actions/setup-python@v4
#        with:
#          python-version: '3.12'
#      - name: Install dependencies
#        run: |
#          pip install flake8 pylint
#      - name: Run linting
#        run: |
#          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
#          pylint src/

  build-tailwind:
    needs: python-format
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '16'
      - name: Install npm dependencies
        run: npm install
      - name: Build Tailwind CSS
        run: npm run build:css

  unit-testing:
    needs: build-tailwind
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.12
      - name: Install requirements
        run: |
          pip install -r requirements.txt
          pip install pytest pytest-cov
      - name: Run tests
        working-directory: ./unit_tests
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
        run: |
          export PYTHONPATH=$PYTHONPATH:$(pwd)/..
          pytest test_auth.py test_search.py test_watchlist.py test_admin.py --cov=src --cov-report=xml
#      - name: Upload coverage reports to Codecov
#        uses: codecov/codecov-action@v3
#        with:
#          file: ./unit_tests/coverage.xml
#          flags: unittests
#          name: codecov-umbrella
#          fail_ci_if_error: true

  build-docker-image:
    needs: unit-testing
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        run: |
          echo "${{ secrets.ORG_GHCR_TOKEN }}" | docker login ghcr.io --username "oosborgschmitz" --password-stdin

      - name: Build Docker Image
        run: |
          IMAGE_NAME=ghcr.io/sse-movies/user-authentication-testing:latest
          docker build -t $IMAGE_NAME .

      - name: Push Docker Image to GHCR
        run: |
          IMAGE_NAME=ghcr.io/sse-movies/user-authentication-testing:latest
          docker push $IMAGE_NAME
  
  deploy-azure-container-app:
    needs: build-docker-image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.USERAUTHENTICATIONTESTING_AZURE_CREDENTIALS }}

      - name: Deploy to Azure Container App
        run: |
          az containerapp update \
            --name user-authentication-testing \
            --resource-group SSE-movies \
            --image ghcr.io/sse-movies/user-authentication-testing:latest \

      - name: Azure Logout
        run: az logout